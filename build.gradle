plugins {
    // Supports functionality similar to Maven BOM.
    // Helps to avoid re-declaring dependency version in each subproject.
    // See https://github.com/spring-gradle-plugins/dependency-management-plugin
    id "io.spring.dependency-management" version "1.1.5" apply false
}


apply plugin: 'java-library'
apply plugin: 'io.spring.dependency-management'

apply from: "$rootDir/gradle/deltix.gradle"

repositories {
    deltixMavenRepository("epm-rtc-public-java")
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


ext {
    emberVersion = '1.14.154'
}

dependencyManagement {
    imports {
        mavenBom 'deltix:deltix-ember-bom:' + emberVersion
    }
}

dependencies {
    // Ember API
    implementation "deltix:deltix-anvil-lang"
    implementation "deltix:deltix-ember-api"
    implementation "deltix:deltix-ember-message"


    // Decimal datatype
    implementation 'com.epam.deltix:dfp'

    // Garbage free Logging
    implementation 'com.epam.deltix:gflog-api'

    // Deltix Collections are used in some TimeBase messages
    implementation "deltix.qsrv:deltix-commons-collections"
    implementation "deltix.qsrv:deltix-commons-util"
    implementation "deltix.qsrv:deltix-commons-lang"
    implementation "deltix.qsrv.timebase:deltix-timebase-api"

    // @Nullable, etc.
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // Unit tests
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation 'org.mockito:mockito-core:2.6.3'


    // Order SubmitSample dependency
    testImplementation "deltix:deltix-ember-message-bus-client"
    testImplementation "deltix:deltix-ember-message"
    testImplementation "deltix:deltix-ember-codec"
    testImplementation "deltix.qsrv.timebase:deltix-timebase-api"
    //testImplementation "deltix:trading-calendar:5.2.1"

    // We need this if we want to Run/Debug RR from this project using EmberApp service and for OrderSubmitSample
    testImplementation  "deltix:deltix-ember-app:$emberVersion"

}

test {
    // useJUnitPlatform() // if you're using JUnit 5

    jvmArgs '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio=ALL-UNNAMED',
            '--add-opens=java.base/java.nio=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED',
            '--add-opens=java.base/java.util.zip=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED'
}


// ZIP with sample risk rules to share with clients (result file can be found under build/distributions/*.zip)
task makeZIP(type: Zip) {
    archiveBaseName = 'deltix-risk-sample'

    from('.') {
        include '**/*'
        exclude '.git/'
        exclude '.gradle/'
        exclude '.idea/libraries/'
        exclude '.idea/vcs.xml'
        exclude 'build/'
        exclude 'out/'
    }
}
